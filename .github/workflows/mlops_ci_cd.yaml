name: MLOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: "sudarshan889"
  IMAGE_TAG: latest
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4


    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    
    - name: Build & push MLflow
      run: |
        export REGISTRY="sudarshan889"
        export IMAGE_TAG="latest"
        docker build -t $REGISTRY/mlflow:$IMAGE_TAG ./mlflow
        docker push $REGISTRY/mlflow:$IMAGE_TAG


    - name: Deploy MLflow on Azure VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: sudarshanuser
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: 22
        script: |
          export REGISTRY="sudarshan889"
          export IMAGE_TAG="latest"
          
          docker stop mlflow || true
          docker rm mlflow || true
          docker system prune -f --volumes || true
          docker pull $REGISTRY/mlflow:$IMAGE_TAG

          docker run -d --restart unless-stopped --name mlflow -p 5000:5000 -v $HOME/mlruns:/mlruns -v $HOME/mlflow.db:/mlflow.db -e MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db -e MLFLOW_DEFAULT_ARTIFACT_ROOT=azure://mlflowartifactsud.blob.core.windows.net/mlflow -e AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} -e AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} $REGISTRY/mlflow:$IMAGE_TAG
          
      


    - name: Run DVC Repro
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: sudarshanuser
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: 22
        script: |
          if [ ! -d ~/mlops ]; then
            git clone https://github.com/pandu-12345/mlops-template.git ~/mlops
          else
            cd ~/mlops
            git fetch --all
            git reset --hard origin/main
          fi
          
          cd ~/mlops
          
          export PYTHONPATH=$PYTHONPATH:~/mlops
          export MLFLOW_TRACKING_URI=http://${{ secrets.AZURE_VM_IP }}:5000
          export MLFLOW_EXPERIMENT_NAME="my_experiment"
          export MLFLOW_MODEL_NAME="resnet18-model"
          export MLFLOW_ARTIFACT_URI=azure://mlflowartifactsud.blob.core.windows.net/mlflow
          export AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          export AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          

          source .venv/bin/activate


          pip install --upgrade pip

          pip install --prefer-binary -r requirements.txt
          pip install -e .
          if nvidia-smi &> /dev/null; then
           pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
          fi
          
          export AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
          export AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
          export AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}
          dvc remote add -d azure_remote azure://mlflowartifactsud.blob.core.windows.net/mlflow || true
          dvc remote modify azure_remote account_name $AZURE_STORAGE_ACCOUNT_NAME
          dvc remote modify azure_remote account_key $AZURE_STORAGE_ACCOUNT_KEY
          dvc repro --force


    - name: Build & push Flask API
      run: |
        docker build -t $REGISTRY/flask-api:$IMAGE_TAG -f ./api/Dockerfile .
        docker push $REGISTRY/flask-api:$IMAGE_TAG


    - name: Build & push Streamlit
      run: |
        docker build -t $REGISTRY/streamlit:$IMAGE_TAG ./templates
        docker push $REGISTRY/streamlit:$IMAGE_TAG

    - name: Deploy Streamlit
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: sudarshanuser
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: 22
        script: |
          export REGISTRY="sudarshan889"
          export IMAGE_TAG="latest"
          cd ~/mlops
          docker stop streamlit || true
          docker rm streamlit || true
          docker system prune -f --volumes || true
          docker pull $REGISTRY/streamlit:$IMAGE_TAG
          docker run -d --restart unless-stopped --name streamlit -p 8501:8501 $REGISTRY/streamlit:$IMAGE_TAG

    - name: Deploy Flask
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: sudarshanuser
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: 22
        script: |
          export REGISTRY="sudarshan889"
          export IMAGE_TAG="latest"
          cd ~/mlops
          docker stop flask-api || true
          docker rm flask-api || true
          docker system prune -f --volumes || true
          docker pull $REGISTRY/flask-api:$IMAGE_TAG

          docker run -d --restart unless-stopped --name flask-api -p 8000:8000 -e MLFLOW_TRACKING_URI=http://${{ secrets.AZURE_VM_IP }}:5000 -e MLFLOW_MODEL_NAME="resnet18-model" -e MLFLOW_MODEL_STAGE="Production" $REGISTRY/flask-api:$IMAGE_TAG